/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// | TAB      |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |   BKSP    |
// | CTRL     |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |    '      |
// | SHFT(ESC)|  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | SHFT(RET) |
//                                     LWR | SPC | RSE               
                        bindings = <
   &kp TAB       &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &kp LCTRL     &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &mt LSHFT ESC &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &mt RSHFT RET
                                  &mo 1 &kp SPACE &mo 2
                        >;
                };

                lower_layer {
// ----------------------------------------------------------------------------------
// | TAB      |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | DEL |
// | CTRL     |     | HOME| PGUP| PGDN| END |   |  `  |  -  |  =  |  [  |  ]  | GUI |
// | SHFT(ESC)| GUI | ALT | CTRL|     |     |   |  \  |  _  |  +  |  {  |  }  | ALT |
//                                   | ADJ | BKSP |    |
                        bindings = <
   &trans &kp N1    &kp N2    &kp N3    &kp N4    &kp N5        &kp N6    &kp N7    &kp N8    &kp N9    &kp N0    &kp DEL
   &trans &none     &kp HOME  &kp PG_UP &kp PG_DN &kp END       &kp GRAVE &kp MINUS &kp EQUAL &kp LBKT  &kp RBKT  &kp RGUI
   &trans &kp LGUI  &kp LALT  &kp LCTRL &none     &none         &kp BSLH  &kp UNDER &kp PLUS  &kp LBRC  &kp RBRC  &kp RALT
                                             &trans       &kp BKSP        &mo 3
                        >;
                };
                
                raise_layer {
// ----------------------------------------------------------------------------------
// | TAB      |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | DEL |
// | CTRL     |     |     |     |     |     |   | LFT | DWN |  UP | RGT |     |     |
// | SHFT(ESC)|     |     |     |     |     |   |     |     | CTRL| ALT | GUI |     |
//                                   |     | RET | ADJ |
                        bindings = <
   &trans &kp EXCL  &kp AT      &kp HASH &kp DLLR &kp PRCNT      &kp CARET &kp AMPS &kp STAR  &kp LPAR  &kp RPAR  &kp DEL
   &trans &none     &none       &none    &none    &none          &kp LEFT  &kp DOWN &kp UP    &kp RIGHT &none     &none
   &trans &none     &none       &none    &none    &none          &none     &none    &kp RCTRL &kp RALT  &kp RGUI  &none
                                            &mo 3       &kp RET         &trans
                        >;
                };

                adjust_layer {
// -------------------------------------------------------------------------------
// | F1 | F2  | F3  | F4   | F5  | F6  |   | F7   | F8  | F9  | F10 | F11 | F12  |
// |    | BRI+| BACK| PL/PS| FWD | CAPS|   | BT1  | BT2 | BT3 | BT4 | BT5 | BTCLR|
// |    | BRI-| VOL-| MUTE | VOL+|     |   | RESET|     |     |     |     |      |
//                              |     |     |     |
                        bindings = <
   &kp F1          &kp F2          &kp F3          &kp F4          &kp F5        &kp F6      &kp F7       &kp F8       &kp F9       &kp F10      &kp F11      &kp F12
   &none           &kp C_BRI_UP    &kp C_PREV      &kp C_PP        &kp C_NEXT    &kp CAPS    &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &bt BT_CLR
   &none           &kp C_BRI_DN    &kp C_VOL_DN    &kp C_MUTE      &kp C_VOL_UP  &none       &reset       &none        &none        &none        &none        &none
                                                                      &trans       &tog 3        &trans
                        >;
                };
        };
};